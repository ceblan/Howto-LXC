# ansible_pg_cluster/templates/docker-compose.yml.j2

version: '3.7'

services:
  patroni:
    image: zalando/patroni:2.1.4-debian-11
    container_name: patroni
    restart: unless-stopped
    network_mode: host
    volumes:
      - {{ pg_cluster_base_dir }}/patroni/patroni.yml:/patroni.yml
      - postgres-data:/var/lib/postgresql/data
    environment:
      - PATRONI_NAME={{ node_name }}             # Variable específica del nodo
      - PATRONI_IP={{ node_ip }}                 # Variable específica del nodo
      - PATRONI_SCOPE=postgres-cluster
      - PATRONI_CONFIG_FILE=/patroni.yml
      - PATRONI_POSTGRESQL_DATA_DIR=/var/lib/postgresql/data/pgdata
    depends_on:
      - etcd

  etcd:
    image: bitnami/etcd:3.5
    container_name: etcd
    restart: unless-stopped
    network_mode: host
    volumes:
      - etcd-data:/bitnami/etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://{{ node_ip }}:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://{{ node_ip }}:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-token
      # Este bucle genera la cadena de clúster inicial, ej: pg-node1=http://...,pg-node2=http://...
      - ETCD_INITIAL_CLUSTER={% for host in groups['postgres_nodes'] %}{{ hostvars[host]['node_name'] }}=http://{{ hostvars[host]['node_name'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}
      - ETCD_INITIAL_CLUSTER_STATE=new

volumes:
  postgres-data:
  etcd-data:
